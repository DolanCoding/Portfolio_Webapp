{
  "meta": {
    "type": "AI_DEPENDENCY_RESOLUTION_CACHE",
    "purpose": "ZERO_LATENCY_IMPORT_RESOLUTION_WITHOUT_FILE_SYSTEM_TRAVERSAL",
    "generated": "2025-08-04",
    "workspace_analysis_source": "npm run analyze"
  },
  "dependency_cache": {
    "App": {
      "full_file_path": "src/App.tsx",
      "exports": ["App"],
      "dependencies": [
        "React",
        "BrowserRouter",
        "Routes",
        "Route",
        "Suspense",
        "./config",
        "./pages/Home/Home",
        "./pages/About/About",
        "./pages/Projects/Projects",
        "./pages/Certificates/Certificates",
        "./pages/Contact/Contact",
        "./pages/NotFound/NotFound",
        "./components/Header/Header",
        "./components/Footer/Footer"
      ],
      "circular_dependencies": [],
      "component_type": "root_application"
    },
    "Header": {
      "full_file_path": "src/components/Header/Header.tsx",
      "exports": ["Header"],
      "dependencies": ["React", "Link", "./Header.css"],
      "circular_dependencies": [],
      "component_type": "shared_component"
    },
    "Footer": {
      "full_file_path": "src/components/Footer/Footer.tsx",
      "exports": ["Footer"],
      "dependencies": ["React", "./Footer.css"],
      "circular_dependencies": [],
      "component_type": "shared_component"
    },
    "Home": {
      "full_file_path": "src/pages/Home/Home.tsx",
      "exports": ["Home"],
      "dependencies": ["React", "./Home.css"],
      "circular_dependencies": [],
      "component_type": "page_component"
    },
    "About": {
      "full_file_path": "src/pages/About/About.tsx",
      "exports": ["About"],
      "dependencies": ["React", "./About.css"],
      "circular_dependencies": [],
      "component_type": "page_component"
    },
    "Projects": {
      "full_file_path": "src/pages/Projects/Projects.tsx",
      "exports": ["Projects"],
      "dependencies": [
        "React",
        "useState",
        "useEffect",
        "../../api/apiClient",
        "../../types",
        "./Projects.css",
        "./components/ProjectCard/ProjectCard",
        "./components/ProjectDetails/ProjectDetails"
      ],
      "circular_dependencies": [],
      "component_type": "page_component"
    },
    "ProjectCard": {
      "full_file_path": "src/pages/Projects/components/ProjectCard/ProjectCard.tsx",
      "exports": ["ProjectCard"],
      "dependencies": ["React", "../../../../types", "./ProjectCard.css"],
      "circular_dependencies": [],
      "component_type": "feature_component"
    },
    "ProjectDetails": {
      "full_file_path": "src/pages/Projects/components/ProjectDetails/ProjectDetails.tsx",
      "exports": ["ProjectDetails"],
      "dependencies": [
        "React",
        "useState",
        "useEffect",
        "useParams",
        "../../../../api/apiClient",
        "../../../../types",
        "./ProjectDetails.css"
      ],
      "circular_dependencies": [],
      "component_type": "feature_component"
    },
    "Certificates": {
      "full_file_path": "src/pages/Certificates/Certificates.tsx",
      "exports": ["Certificates"],
      "dependencies": [
        "React",
        "useState",
        "useEffect",
        "../../api/apiClient",
        "../../types",
        "./Certificates.css",
        "./CertificateCard/CertificateCard"
      ],
      "circular_dependencies": [],
      "component_type": "page_component"
    },
    "CertificateCard": {
      "full_file_path": "src/pages/Certificates/CertificateCard/CertificateCard.tsx",
      "exports": ["CertificateCard"],
      "dependencies": ["React", "../../../types", "./CertificateCard.css"],
      "circular_dependencies": [],
      "component_type": "feature_component"
    },
    "Contact": {
      "full_file_path": "src/pages/Contact/Contact.tsx",
      "exports": ["Contact"],
      "dependencies": ["React", "./Contact.css"],
      "circular_dependencies": [],
      "component_type": "page_component"
    },
    "NotFound": {
      "full_file_path": "src/pages/NotFound/NotFound.tsx",
      "exports": ["NotFound"],
      "dependencies": ["React", "Link", "./NotFound.css"],
      "circular_dependencies": [],
      "component_type": "page_component"
    },
    "apiClient": {
      "full_file_path": "src/api/apiClient.ts",
      "exports": ["fetchProjects", "fetchProjectById", "fetchCertificates"],
      "dependencies": ["../config", "../types"],
      "circular_dependencies": [],
      "component_type": "api_service"
    },
    "types": {
      "full_file_path": "src/types/index.ts",
      "exports": [
        "Project",
        "Certificate",
        "ProjectId",
        "CertificateId",
        "AppError",
        "isProjectId",
        "isCertificateId"
      ],
      "dependencies": [],
      "circular_dependencies": [],
      "component_type": "type_definitions"
    },
    "config": {
      "full_file_path": "src/config.ts",
      "exports": ["config"],
      "dependencies": [],
      "circular_dependencies": [],
      "component_type": "configuration"
    },
    "aiValidationHelpers": {
      "full_file_path": "src/utils/aiValidationHelpers.ts",
      "exports": [
        "isProjectId",
        "isCertificateId",
        "validateProject",
        "validateCertificate",
        "validateApiResponse",
        "validateAppError",
        "generateWorkspaceReport"
      ],
      "dependencies": ["fs", "path", "../types"],
      "circular_dependencies": [],
      "component_type": "utility_functions"
    },
    "codeStructureAnalysis": {
      "full_file_path": "src/utils/codeStructureAnalysis.ts",
      "exports": [
        "analyzeCodeStructure",
        "generateArchitecturalInsights",
        "calculateAIAgentOptimization"
      ],
      "dependencies": ["fs", "path"],
      "circular_dependencies": [],
      "component_type": "utility_functions"
    },
    "analyzeWorkspace": {
      "full_file_path": "src/utils/analyzeWorkspace.ts",
      "exports": ["runAgentAnalysis", "demonstrateAgentUsage"],
      "dependencies": ["./codeStructureAnalysis"],
      "circular_dependencies": [],
      "component_type": "utility_functions"
    },
    "automatedCodeReview": {
      "full_file_path": "src/utils/automatedCodeReview.ts",
      "exports": ["performAutomatedCodeReview", "generateCodeReviewReport"],
      "dependencies": ["fs", "path"],
      "circular_dependencies": [],
      "component_type": "utility_functions"
    },
    "templateManager": {
      "full_file_path": "src/utils/templateManager.ts",
      "exports": ["generateFromTemplate", "validateTemplate"],
      "dependencies": ["fs", "path"],
      "circular_dependencies": [],
      "component_type": "utility_functions"
    }
  },
  "import_resolution_shortcuts": {
    "pages": {
      "pattern": "src/pages/{PageName}/{PageName}.tsx",
      "lazy_import_pattern": "React.lazy(() => import('./pages/{PageName}/{PageName}'))"
    },
    "components": {
      "shared": "src/components/{ComponentName}/{ComponentName}.tsx",
      "feature": "src/pages/{PageName}/components/{ComponentName}/{ComponentName}.tsx"
    },
    "utilities": {
      "pattern": "src/utils/{utilityName}.ts",
      "import_pattern": "import { functionName } from './utils/{utilityName}'"
    },
    "types": {
      "pattern": "src/types/index.ts",
      "import_pattern": "import { TypeName } from './types'"
    },
    "api": {
      "pattern": "src/api/{serviceName}.ts",
      "import_pattern": "import { apiFunction } from './api/{serviceName}'"
    }
  },
  "dependency_analysis": {
    "heavily_depended_components": [
      "types (imported by 8 components)",
      "React (imported by all components)",
      "apiClient (imported by 3 page components)"
    ],
    "isolated_components": ["config", "types"],
    "circular_dependency_status": "NONE_DETECTED",
    "dependency_depth_analysis": {
      "max_depth": 3,
      "deepest_chains": [
        "App -> Projects -> ProjectCard -> types",
        "App -> Certificates -> CertificateCard -> types"
      ]
    }
  },
  "optimization_insights": {
    "import_efficiency": "HIGH_DUE_TO_PREDICTABLE_STRUCTURE",
    "bundle_splitting_opportunities": [
      "Page components already lazy-loaded",
      "Utility functions could be tree-shaken",
      "Type definitions centralized efficiently"
    ],
    "refactoring_recommendations": [
      "Consider extracting common API patterns",
      "Utility functions well-organized",
      "Component isolation maintained well"
    ]
  }
}
